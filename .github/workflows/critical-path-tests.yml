name: Critical Path Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  critical-path-tests:
    name: Critical Path Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci

      - name: Create environment file and validate secrets
        run: |
          echo "üîç Creating environment file and validating secrets..."

          # Create .env.local with actual secrets (required for validation)
          echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> .env.local
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env.local
          echo "VITE_OPENAI_MODEL=${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}" >> .env.local

          # Note: OpenAI API key is NOT added to .env.local for security
          # Server-side functions handle OpenAI API calls securely
          if [ -n "${{ secrets.OPENAI_API_KEY }}" ]; then
            echo "‚úÖ OpenAI API key configured (server-side only)"
          else
            echo "‚ö†Ô∏è OpenAI API key not configured - AI parsing tests may use fallbacks"
          fi

          # Validate that CRITICAL secrets are present (Supabase required for database tests)
          if [ -z "${{ secrets.VITE_SUPABASE_URL }}" ]; then
            echo "‚ùå VITE_SUPABASE_URL secret is REQUIRED for database tests!"
            echo "üí° Add this secret to your GitHub repository settings"
            exit 1
          fi

          if [ -z "${{ secrets.VITE_SUPABASE_ANON_KEY }}" ]; then
            echo "‚ùå VITE_SUPABASE_ANON_KEY secret is REQUIRED for database tests!"
            echo "üí° Add this secret to your GitHub repository settings"
            exit 1
          fi

          echo "‚úÖ Critical secrets are configured - ready for database testing"

      - name: Test Supabase connection (validate secrets)
        run: |
          echo "üîó Testing Supabase connection to validate secrets..."
          node -e "
          const { createClient } = require('@supabase/supabase-js');

          const url = process.env.VITE_SUPABASE_URL;
          const key = process.env.VITE_SUPABASE_ANON_KEY;

          console.log('üîç Testing connection to:', url?.substring(0, 30) + '...');

          const supabase = createClient(url, key);

          (async () => {
            try {
              // Test basic connectivity
              const { data, error } = await supabase
                .from('recipes')
                .select('id')
                .limit(1);
              
              if (error) {
                console.error('‚ùå Supabase connection failed:', error.message);
                console.error('üí° Check if your Supabase credentials are valid and not expired');
                process.exit(1);
              }
              
              console.log('‚úÖ Supabase connection successful');
              
              // Test versioning table (critical for tests)
              const { data: versionData, error: versionError } = await supabase
                .from('recipe_content_versions')
                .select('id')
                .limit(1);
                
              if (versionError) {
                console.error('‚ùå Recipe versioning table not accessible:', versionError.message);
                console.error('üí° Database schema may be missing - check migrations');
                process.exit(1);
              }
              
              console.log('‚úÖ Recipe versioning schema accessible');
              console.log('üéâ All database connections validated!');
              
            } catch (err) {
              console.error('‚ùå Connection test failed:', err.message);
              process.exit(1);
            }
          })();
          "
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Run TypeScript check
        run: npx tsc --noEmit --skipLibCheck

      - name: Run AI endpoints unit tests
        run: npm run test -- src/__tests__/api/ai-endpoints.test.ts --run --reporter=verbose
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENAI_MODEL: ${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}
          # Note: OPENAI_API_KEY excluded for security - server-side only

      - name: Run critical path integration tests
        run: npm run test -- src/__tests__/integration/recipe-critical-path.test.ts --run --reporter=verbose
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENAI_MODEL: ${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}
          # Note: OPENAI_API_KEY excluded for security - server-side only

      - name: Test production build
        run: npm run build

      - name: Run core functionality tests
        run: npm run test:core
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENAI_MODEL: ${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}
          # Note: OPENAI_API_KEY excluded for security - server-side only

      - name: Critical path validation summary
        run: |
          echo "üéâ Critical Path Validation Complete!"
          echo "======================================"
          echo "‚úÖ TypeScript compilation"
          echo "‚úÖ AI endpoints structure"
          echo "‚úÖ Recipe CRUD operations"
          echo "‚úÖ Database schema integrity"
          echo "‚úÖ Production build process"
          echo "‚úÖ Core application functionality"
          echo ""
          echo "üöÄ Ready for deployment!"
