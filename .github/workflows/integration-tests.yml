name: Integration Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  integration-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Cache Docker images
        uses: actions/cache@v4
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-docker-

      - name: Pre-pull Supabase Docker images
        run: |
          echo "Pre-pulling Supabase Docker images to avoid rate limits..."
          docker pull public.ecr.aws/supabase/logflare:1.22.3 || (sleep 10 && docker pull public.ecr.aws/supabase/logflare:1.22.3) || echo "Failed to pull logflare, continuing..."
          docker pull public.ecr.aws/supabase/vector:0.28.1-alpine || (sleep 10 && docker pull public.ecr.aws/supabase/vector:0.28.1-alpine) || echo "Failed to pull vector, continuing..."
          docker pull public.ecr.aws/supabase/kong:2.8.1 || (sleep 10 && docker pull public.ecr.aws/supabase/kong:2.8.1) || echo "Failed to pull kong, continuing..."
          docker pull public.ecr.aws/supabase/mailpit:v1.22.3 || (sleep 10 && docker pull public.ecr.aws/supabase/mailpit:v1.22.3) || echo "Failed to pull mailpit, continuing..."
          docker pull public.ecr.aws/supabase/postgres:15.1.0.117 || (sleep 10 && docker pull public.ecr.aws/supabase/postgres:15.1.0.117) || echo "Failed to pull postgres, continuing..."
          docker pull public.ecr.aws/supabase/studio:20231219-1b3a0b1 || (sleep 10 && docker pull public.ecr.aws/supabase/studio:20231219-1b3a0b1) || echo "Failed to pull studio, continuing..."
          docker pull public.ecr.aws/supabase/edge-runtime:v1.22.3 || (sleep 10 && docker pull public.ecr.aws/supabase/edge-runtime:v1.22.3) || echo "Failed to pull edge-runtime, continuing..."
          echo "Docker image pre-pull completed"

      - name: Start Supabase
        run: |
          echo "Starting Supabase with retry logic..."
          for i in {1..3}; do
            echo "Attempt $i to start Supabase..."
            if npx supabase start; then
              echo "Supabase started successfully"
              break
            else
              echo "Supabase start failed, retrying in 10 seconds..."
              sleep 10
            fi
          done

          echo "Resetting database..."
          npx supabase db reset
          # Wait a moment for reset to complete
          sleep 5

          echo "Seeding database..."
          npm run seed:full
        env:
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}

      - name: Run integration tests with dual servers
        run: npm run test:integration:full
        env:
          NODE_ENV: test
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          API_BASE_URL: http://localhost:3000

      - name: Cleanup
        if: always()
        run: |
          npx supabase stop
          pkill -f "vite.*dev" || true
          pkill -f "vercel.*dev" || true
