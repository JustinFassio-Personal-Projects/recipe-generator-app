name: Pre-PR Verification

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Clear npm cache
        run: npm cache clean --force

      - name: Install dependencies
        run: npm ci

      - name: Create environment file for tests
        run: |
          echo "üîç Creating environment file for tests..."

          # Create .env.local with secrets for test environment
          echo "VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }}" >> .env.local
          echo "VITE_SUPABASE_ANON_KEY=${{ secrets.VITE_SUPABASE_ANON_KEY }}" >> .env.local
          echo "VITE_OPENAI_MODEL=${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}" >> .env.local

          # Validate critical secrets for database tests
          if [ -z "${{ secrets.VITE_SUPABASE_URL }}" ]; then
            echo "‚ùå VITE_SUPABASE_URL secret missing - database tests will fail"
            echo "üí° Add this secret to GitHub repository settings"
            exit 1
          fi

          if [ -z "${{ secrets.VITE_SUPABASE_ANON_KEY }}" ]; then
            echo "‚ùå VITE_SUPABASE_ANON_KEY secret missing - database tests will fail"
            echo "üí° Add this secret to GitHub repository settings"
            exit 1
          fi

          echo "‚úÖ Environment configured for tests"

      - name: Run linting
        run: npm run lint

      - name: Check formatting
        run: npm run format:check

      - name: Type check
        run: npx tsc --noEmit

      - name: Run tests
        run: npm run test:run
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENAI_MODEL: ${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}

      - name: Check coverage
        run: npm run test:coverage
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENAI_MODEL: ${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}

      - name: Build
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
          VITE_OPENAI_MODEL: ${{ secrets.VITE_OPENAI_MODEL || 'gpt-4o-mini' }}

      - name: Security audit
        run: npm audit --production --audit-level=critical

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
