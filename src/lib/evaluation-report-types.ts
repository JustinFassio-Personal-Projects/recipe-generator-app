/**
 * Evaluation Report Type Definitions
 *
 * Centralized type definitions for evaluation reports generated by Dr. Luna Clearwater.
 */

export interface EvaluationReport {
  user_evaluation_report: {
    report_id: string;
    evaluation_date: string;
    dietitian: string;
    report_version: string;
    user_profile_summary: {
      user_id: string;
      evaluation_completeness: number;
      data_quality_score: number;
      last_updated: string;
    };
    safety_assessment: {
      status: string;
      critical_alerts: Array<{
        type: string;
        severity: string;
        item: string;
        required_action: string;
        hidden_sources: string[];
        cross_contamination_risk: string;
      }>;
      dietary_restrictions: Array<{
        type: string;
        severity: string;
        tolerance_threshold: string;
        safe_alternatives: string[];
        enzyme_supplementation: string;
      }>;
      medical_considerations: Array<{
        condition: string;
        nutritional_priority: string;
        key_strategies: string[];
        monitoring_markers: string[];
      }>;
    };
    personalization_matrix: {
      skill_profile: {
        current_level: string;
        confidence_score: number;
        growth_trajectory: string;
        recommended_techniques: string[];
        advancement_timeline: string;
      };
      time_analysis: {
        available_time_per_meal: number;
        time_utilization_efficiency: number;
        optimization_opportunities: string[];
        quick_meal_quota: string;
      };
      equipment_optimization: {
        utilization_rate: number;
        underused_tools: string[];
        missing_beneficial_tools: string[];
        technique_adaptations: string;
      };
      cultural_preferences: {
        primary_cuisines: string[];
        flavor_profile_affinity: string;
        spice_tolerance_calibration: number;
        fusion_receptiveness: string;
      };
      ingredient_landscape: {
        embrace_list: string[];
        avoid_list: string[];
        exploration_candidates: string[];
        substitution_success_rate: number;
      };
    };
    nutritional_analysis: {
      current_status: {
        overall_diet_quality_score: number;
        nutritional_completeness: number;
        anti_inflammatory_index: number;
        gut_health_score: number;
        metabolic_health_score: number;
      };
      deficiency_risks: Array<{
        nutrient: string;
        risk_level: string;
        current_intake_estimate: string;
        food_sources: string[];
        supplementation_consideration: string;
      }>;
      optimization_priorities: Array<{
        priority: number;
        focus: string;
        impact_score: number;
        implementation_difficulty: string;
      }>;
    };
    personalized_recommendations: {
      immediate_actions: Array<{
        action: string;
        description: string;
        expected_benefit: string;
        difficulty: string;
        resources_provided: string[];
      }>;
      weekly_structure: {
        meal_framework: {
          breakfast_template: string;
          lunch_template: string;
          dinner_template: string;
          snack_strategy: string;
        };
        cuisine_rotation: {
          monday: string;
          tuesday: string;
          wednesday: string;
          thursday: string;
          friday: string;
          weekend: string;
        };
      };
      progressive_challenges: Array<{
        week_1_4: string;
        week_5_8: string;
        week_9_12: string;
      }>;
    };
    meal_suggestions: {
      signature_recipes: Array<{
        name: string;
        prep_time: number;
        skill_match: number;
        health_impact_score: number;
        customization_notes: string;
        allergen_safe: boolean;
      }>;
      quick_options: string[];
      batch_cooking_priorities: string[];
    };
    progress_tracking: {
      key_metrics: Array<{
        metric: string;
        baseline: string;
        target: string;
        reassessment: string;
      }>;
      milestone_markers: Array<{
        week_2: string;
        week_4: string;
        week_8: string;
        week_12: string;
      }>;
    };
    risk_mitigation: {
      adherence_barriers: Array<{
        barrier: string;
        mitigation_strategy: string;
        backup_plan: string;
      }>;
      safety_reminders: string[];
    };
    support_resources: {
      education_modules: string[];
      tools_provided: string[];
      community_connections: string[];
    };
    next_steps: {
      immediate_72_hours: string[];
      week_1_goals: string[];
      week_1_objectives: string[];
    };
    professional_notes: {
      strengths_observed: string;
      growth_opportunities: string;
      collaboration_recommendations: string;
      reassessment_schedule: string;
    };
    report_metadata: {
      confidence_level: number;
      data_completeness: number;
      personalization_depth: string;
      evidence_base: string;
      last_literature_review: string;
      next_update_recommended: string;
    };
  };
}

export interface DatabaseEvaluationReport {
  id: string;
  user_id: string;
  report_id: string;
  evaluation_date: string;
  dietitian: string;
  report_version: string;
  report_data: EvaluationReport['user_evaluation_report'];
  created_at: string;
  updated_at: string;
}

// Additional UI-specific types
export interface DeficiencyRisk {
  nutrient: string;
  risk_level: string;
  current_intake_estimate: string;
  food_sources: string[];
  supplementation_consideration: string;
}

export interface ImmediateAction {
  action: string;
  description: string;
  expected_benefit: string;
  difficulty: string;
  resources_provided: string[];
}

export interface CriticalAlert {
  type: string;
  severity: string;
  item: string;
  required_action: string;
  hidden_sources: string[];
  cross_contamination_risk: string;
}

export interface DietaryRestriction {
  type: string;
  severity: string;
  tolerance_threshold: string;
  safe_alternatives: string[];
  enzyme_supplementation: string;
}

export interface KeyMetric {
  metric: string;
  baseline: string;
  target: string;
  reassessment: string;
}

export interface MilestoneMarker {
  [week: string]: string;
}
